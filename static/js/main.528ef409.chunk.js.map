{"version":3,"sources":["utils/api.js","componets/Main.jsx","componets/Character.jsx","componets/App.js","redux/action/characters.js","reportWebVitals.js","redux/reducers/characterName.js","redux/reducers/characterImage.js","redux/reducers/rootReducers.js","redux/store.js","index.js"],"names":["api","url","headers","this","_url","_headers","res","ok","json","Promise","reject","status","fetch","then","_checkResponse","Main","getCharacters","clearCharacter","className","Box","mr","Button","variant","color","onClick","to","Character","characterName","useSelector","name","characterImage","image","src","alt","App","dispatch","useDispatch","exact","path","charactersArray","results","map","obj","randomCharacter","Math","floor","length","random","type","payload","catch","err","console","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","inititalState","characterNameReducer","state","action","characterImageReducer","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.528ef409.chunk.js","sourcesContent":["class Api {\r\n    constructor({ url, headers }) {\r\n        this._url = url;\r\n        this._headers = headers\r\n    }\r\n    _checkResponse(res) {\r\n        if (res.ok) {\r\n            return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n    getCharacters() {\r\n        return fetch(`${this._url}`, {\r\n                headers: this._headers\r\n            })\r\n            .then(this._checkResponse)\r\n    }\r\n}\r\n\r\nconst config = {\r\n    url: 'https://rickandmortyapi.com/api/character',\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n}\r\n\r\nconst api = new Api(config)\r\n\r\nexport default api;","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Main({ getCharacters, clearCharacter }) {\r\n  return (\r\n    <div>\r\n      <h1 className='title'>Какой ты персонаж из Рика и Морти?</h1>\r\n      <div className='wrapper'>\r\n        <Box mr={3}>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={getCharacters}>Вабба-лабба-даб-даб</Button>\r\n        </Box>\r\n        <Box mr={3}>\r\n          <Link to='/answer'>\r\n            <Button variant=\"contained\" color=\"primary\">Посмотреть ответ</Button>\r\n          </Link>\r\n        </Box>\r\n\r\n        <Button variant=\"contained\" color=\"primary\" onClick={clearCharacter}>Очистить</Button>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\n\r\nfunction Character() {\r\n\r\n    const characterName = useSelector(({name})=>name.characterName);\r\n    const characterImage = useSelector(({image})=>image.characterImage);\r\n\r\n    return (\r\n        <div>\r\n            <h1 className='character-name'>{characterName}</h1>\r\n            <img src={characterImage} alt={characterName} />\r\n            <div className='wrapper'>\r\n                <Link to='/'>\r\n                    <Button variant=\"contained\" color=\"primary\" className='btn btn_back'>Испытай судьбу снова</Button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Character;\r\n","import React from 'react';\nimport api from '../utils/api';\nimport { Route,  Switch } from 'react-router-dom';\nimport Main from './Main';\nimport Character from './Character';\nimport { addCharacterName, addCharacterImage, removeCharacterName, removeCharacterImage } from '../redux/action/characters'\nimport { useDispatch } from 'react-redux';\n\n\n\n\nfunction App() {\n\n  const dispatch = useDispatch();\n\n  function getCharacters() {\n    api.getCharacters()\n      .then((res) => {\n        let charactersArray = res.results.map((obj => {\n          return [obj.name, obj.image]\n        }));\n        const randomCharacter = charactersArray[Math.floor(charactersArray.length * Math.random())];\n        dispatch(addCharacterName(randomCharacter[0]));\n        dispatch(addCharacterImage(randomCharacter[1]))\n      })\n      .catch(err => console.error(err));\n  }\n\n  function removeCharacter() {\n    dispatch(removeCharacterName(''));\n    dispatch(removeCharacterImage(''));\n  }\n\n  return (\n    <div className=\"page\">\n      <div className='content'>\n        <Switch>\n          <Route exact path='/'>\n            <Main getCharacters={getCharacters} clearCharacter={removeCharacter} />\n          </Route>\n          <Route exact path='/answer'>\n            <Character />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\n\nexport default App;\n","export const addCharacterName = (name) => ({\r\n    type: 'ADD_CHARACTER_NAME',\r\n    payload: name,\r\n});\r\n\r\nexport const addCharacterImage = (image) => ({\r\n    type: 'ADD_CHARACTER_IMAGE',\r\n    payload: image,\r\n})\r\n\r\nexport const removeCharacterName = (name) => ({\r\n    type: 'REMOVE_CHARACTER_NAME',\r\n    payload: name,\r\n})\r\n\r\nexport const removeCharacterImage = (image) => ({\r\n    type: 'REMOVE_CHARACTER_IMAGE',\r\n    payload: image,\r\n})","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const inititalState = {\r\n    characterName: '',\r\n}\r\n\r\nfunction characterNameReducer(state = inititalState, action) {\r\n    if (action.type === 'ADD_CHARACTER_NAME') {\r\n        return {\r\n            ...state,\r\n            characterName: action.payload,\r\n        }\r\n\r\n    }\r\n    if (action.type === 'REMOVE_CHARACTER_NAME') {\r\n        return {\r\n            ...state,\r\n            characterName: action.payload,\r\n        }\r\n\r\n    }\r\n    return state;\r\n}\r\nexport default characterNameReducer;","const inititalState = {\r\n    characterImage: '',\r\n}\r\n\r\nfunction characterImageReducer(state = inititalState, action) {\r\n    if (action.type === 'ADD_CHARACTER_IMAGE') {\r\n        return {\r\n            ...state,\r\n            characterImage: action.payload,\r\n        }\r\n    }\r\n    if (action.type === 'REMOVE_CHARACTER_IMAGE') {\r\n        return {\r\n            ...state,\r\n            characterImage: action.payload,\r\n        }\r\n\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default characterImageReducer;","import { combineReducers } from 'redux';\r\nimport characterNameReducer from './characterName';\r\nimport characterImageReducer from './characterImage';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    name: characterNameReducer,\r\n    image: characterImageReducer\r\n})\r\n\r\nexport default rootReducer;","import { createStore } from 'redux';\r\nimport rootReducer from './reducers/rootReducers';\r\n\r\n\r\n\r\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './componets/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport store from './redux/store';\r\nimport {Provider} from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <Provider store={store}>\r\n    <App />\r\n    </Provider>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}